parent_classes:


  - class: AllegroFlare::Screens::Base
    scope: public
    init_with: DungeonPlus::Gameplay::TYPE


properties:

  - name: animation_book
    type: DungeonPlus::AnimationBook*
    init_with: nullptr
    constructor_arg: true

  - name: event_emitter
    type: AllegroFlare::EventEmitter*
    init_with: nullptr
    constructor_arg: true

  - name: flat_color_shader
    type: AllegroFlare::Shader*
    init_with: nullptr
    constructor_arg: true

  - name: scene_factory
    type: DungeonPlus::SceneFactory
    init_with: '{}'

  - name: scene
    type: DungeonPlus::Scene*
    init_with: nullptr

  - name: initialized
    type: bool
    init_with: false

  - name: TYPE
    type: char*
    init_with: '(char*)"DungeonPlus/Gameplay"'
    static: true
    constexpr: true


functions:


  - name: set_animation_book
    parameters:
      - name: animation_book
        type: DungeonPlus::AnimationBook*
        default_argument: nullptr
    guards: [ (!initialized) ]
    body: |
      this->animation_book = animation_book;
      return;


  - name: set_event_emitter
    parameters:
      - name: event_emitter
        type: AllegroFlare::EventEmitter*
        default_argument: nullptr
    guards: [ (!initialized) ]
    body: |
      this->event_emitter = event_emitter;
      return;


  - name: set_flat_color_shader
    parameters:
      - name: flat_color_shader
        type: AllegroFlare::Shader*
        default_argument: nullptr
    guards: [ (!initialized) ]
    body: |
      this->flat_color_shader = flat_color_shader;
      return;


  - name: initialize
    guards:
      - (!initialized)
      - animation_book
      - event_emitter
      - flat_color_shader
    body: |
      scene_factory.set_animation_book(animation_book);
      scene_factory.set_event_emitter(event_emitter);
      scene_factory.set_flat_color_shader(flat_color_shader);
      scene_factory.initialize();

      initialized = true;
      scene = scene_factory.create_scene_0();
      if (!scene) throw std::runtime_error("Gameplay: scene could not be created");
      return;


  - name: primary_timer_func
    virtual: true
    override: true
    guards: [ initialized ]
    body: |
      if (scene)
      {
         scene->update();
         scene->draw();
      }


dependencies:


  - symbol: AllegroFlare::Screens::Base
    headers: [ AllegroFlare/Screens/Base.hpp ]
  - symbol: AllegroFlare::EventEmitter
    headers: [ AllegroFlare/EventEmitter.hpp ]
  - symbol: AllegroFlare::Shader
    headers: [ AllegroFlare/Shader.hpp ]
  - symbol: DungeonPlus::AnimationBook
    headers: [ DungeonPlus/AnimationBook.hpp ]
  - symbol: DungeonPlus::SceneFactory
    headers: [ DungeonPlus/SceneFactory.hpp ]
  - symbol: DungeonPlus::Scene
    headers: [ DungeonPlus/Scene.hpp ]


